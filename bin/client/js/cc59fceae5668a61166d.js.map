{"version":3,"sources":["webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/function/utils/clone.js"],"names":["object","__webpack_require__","exports","name","factory","type","config","load","typed","clone","any","toTex","undefined"],"mappings":"2FAEA,IAAAA,EAAaC,EAAQ,GA6BrBC,EAAAC,KAAA,QACAD,EAAAE,QA5BA,SAAAC,EAAAC,EAAAC,EAAAC,GAmBA,IAAAC,EAAAD,EAAA,SACAE,IAAAV,EAAAS,QAIA,OAFAA,EAAAE,WAAAC,EAEAH","file":"js/cc59fceae5668a61166d.js","sourcesContent":["'use strict';\n\nvar object = require('../../utils/object');\n\nfunction factory(type, config, load, typed) {\n  /**\n   * Clone an object.\n   *\n   * Syntax:\n   *\n   *     math.clone(x)\n   *\n   * Examples:\n   *\n   *    math.clone(3.5)                   // returns number 3.5\n   *    math.clone(math.complex('2-4i') // returns Complex 2 - 4i\n   *    math.clone(math.unit(45, 'deg'))  // returns Unit 45 deg\n   *    math.clone([[1, 2], [3, 4]])      // returns Array [[1, 2], [3, 4]]\n   *    math.clone(\"hello world\")         // returns string \"hello world\"\n   *\n   * @param {*} x   Object to be cloned\n   * @return {*} A clone of object x\n   */\n  var clone = typed('clone', {\n    'any': object.clone\n  });\n  clone.toTex = undefined; // use default template\n\n  return clone;\n}\n\nexports.name = 'clone';\nexports.factory = factory;"],"sourceRoot":""}