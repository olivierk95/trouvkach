{"version":3,"sources":["webpack:////home/badou/trouvkach/node_modules/mathjs/lib/index.js","webpack:////home/badou/trouvkach/node_modules/mathjs/lib/json/index.js","webpack:////home/badou/trouvkach/node_modules/mathjs/lib/json/reviver.js"],"names":["module","exports","__webpack_require__","name","path","factory","type","config","load","typed","math","key","value","constructor","mathjs","expression","node","fromJSON"],"mappings":"4FAGAA,EAAAC,QAAA,CAAkBC,EAAQ,KAC1BA,EAAQ,KACRA,EAAQ,KAGRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,wCCRRF,EAAAC,QAAA,CAAkBC,EAAQ,wCCkB1BD,EAAAE,KAAA,UACAF,EAAAG,KAAA,OACAH,EAAAI,QApBA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAOA,gBAAAC,EAAAC,GACA,IAAAC,EAAAP,EAAAM,KAAAE,SAAAJ,EAAAK,YAAAL,EAAAK,WAAAC,KAAAJ,KAAAE,QAEA,OAAAD,GAAA,mBAAAA,EAAAI,SACAJ,EAAAI,SAAAL,GAGAA,IAOAX,EAAAS,MAAA","file":"js/746d7c020fbe8973ede9.js","sourcesContent":["\"use strict\";\n\n// This file contains all factory functions of math.js\nmodule.exports = [require('./type'), // data types (Matrix, Complex, Unit, ...)\nrequire('./constants'), // constants\nrequire('./function'), // functions\n// load ./expression *after* ./function since we need to\n// attach transforms to functions that are imported there\nrequire('./expression'), // expression parsing\nrequire('./json'), // serialization utility (math.json.reviver)\nrequire('./error') // errors\n];","'use strict';\n\nmodule.exports = [require('./reviver')];","'use strict';\n\nfunction factory(type, config, load, typed, math) {\n  /**\n   * Instantiate mathjs data types from their JSON representation\n   * @param {string} key\n   * @param {*} value\n   * @returns {*} Returns the revived object\n   */\n  return function reviver(key, value) {\n    var constructor = type[value && value.mathjs] || math.expression && math.expression.node[value && value.mathjs]; // TODO: instead of checking math.expression.node, expose all Node classes on math.type too\n\n    if (constructor && typeof constructor.fromJSON === 'function') {\n      return constructor.fromJSON(value);\n    }\n\n    return value;\n  };\n}\n\nexports.name = 'reviver';\nexports.path = 'json';\nexports.factory = factory;\nexports.math = true; // request the math namespace as fifth argument"],"sourceRoot":""}