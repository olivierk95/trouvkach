{"version":3,"sources":["webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/constants/e.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/constants/pi.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/construction/bignumber.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/construction/boolean.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/construction/complex.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/construction/createUnit.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/construction/fraction.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/construction/index.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/construction/matrix.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/construction/number.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/construction/sparse.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/construction/splitUnit.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/construction/string.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/construction/unit.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/constants/false.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/constants/i.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/constants/Infinity.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/constants/LN2.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/constants/LN10.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/constants/LOG2E.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/constants/LOG10E.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/constants/NaN.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/constants/null.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/constants/phi.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/constants/SQRT1_2.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/constants/SQRT2.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/constants/tau.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/constants/true.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/constants/version.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/core/config.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/core/import.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/core/typed.js"],"names":["module","exports","name","category","syntax","description","examples","seealso"],"mappings":"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","file":"js/e5cfbd8ecc7ef5ccc401.js","sourcesContent":["\"use strict\";\n\nmodule.exports = {\n  'name': 'e',\n  'category': 'Constants',\n  'syntax': ['e'],\n  'description': 'Euler\\'s number, the base of the natural logarithm. Approximately equal to 2.71828',\n  'examples': ['e', 'e ^ 2', 'exp(2)', 'log(e)'],\n  'seealso': ['exp']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'pi',\n  'category': 'Constants',\n  'syntax': ['pi'],\n  'description': 'The number pi is a mathematical constant that is the ratio of a circle\\'s circumference to its diameter, and is approximately equal to 3.14159',\n  'examples': ['pi', 'sin(pi/2)'],\n  'seealso': ['tau']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'bignumber',\n  'category': 'Construction',\n  'syntax': ['bignumber(x)'],\n  'description': 'Create a big number from a number or string.',\n  'examples': ['0.1 + 0.2', 'bignumber(0.1) + bignumber(0.2)', 'bignumber(\"7.2\")', 'bignumber(\"7.2e500\")', 'bignumber([0.1, 0.2, 0.3])'],\n  'seealso': ['boolean', 'complex', 'fraction', 'index', 'matrix', 'string', 'unit']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'boolean',\n  'category': 'Construction',\n  'syntax': ['x', 'boolean(x)'],\n  'description': 'Convert a string or number into a boolean.',\n  'examples': ['boolean(0)', 'boolean(1)', 'boolean(3)', 'boolean(\"true\")', 'boolean(\"false\")', 'boolean([1, 0, 1, 1])'],\n  'seealso': ['bignumber', 'complex', 'index', 'matrix', 'number', 'string', 'unit']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'complex',\n  'category': 'Construction',\n  'syntax': ['complex()', 'complex(re, im)', 'complex(string)'],\n  'description': 'Create a complex number.',\n  'examples': ['complex()', 'complex(2, 3)', 'complex(\"7 - 2i\")'],\n  'seealso': ['bignumber', 'boolean', 'index', 'matrix', 'number', 'string', 'unit']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'createUnit',\n  'category': 'Construction',\n  'syntax': ['createUnit(definitions)', 'createUnit(name, definition)'],\n  'description': 'Create a user-defined unit and register it with the Unit type.',\n  'examples': ['createUnit(\"foo\")', 'createUnit(\"knot\", {definition: \"0.514444444 m/s\", aliases: [\"knots\", \"kt\", \"kts\"]})', 'createUnit(\"mph\", \"1 mile/hour\")'],\n  'seealso': ['unit', 'splitUnit']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'fraction',\n  'category': 'Construction',\n  'syntax': ['fraction(num)', 'fraction(num,den)'],\n  'description': 'Create a fraction from a number or from a numerator and denominator.',\n  'examples': ['fraction(0.125)', 'fraction(1, 3) + fraction(2, 5)'],\n  'seealso': ['bignumber', 'boolean', 'complex', 'index', 'matrix', 'string', 'unit']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'index',\n  'category': 'Construction',\n  'syntax': ['[start]', '[start:end]', '[start:step:end]', '[start1, start 2, ...]', '[start1:end1, start2:end2, ...]', '[start1:step1:end1, start2:step2:end2, ...]'],\n  'description': 'Create an index to get or replace a subset of a matrix',\n  'examples': ['[]', '[1, 2, 3]', 'A = [1, 2, 3; 4, 5, 6]', 'A[1, :]', 'A[1, 2] = 50', 'A[0:2, 0:2] = ones(2, 2)'],\n  'seealso': ['bignumber', 'boolean', 'complex', 'matrix,', 'number', 'range', 'string', 'unit']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'matrix',\n  'category': 'Construction',\n  'syntax': ['[]', '[a1, b1, ...; a2, b2, ...]', 'matrix()', 'matrix(\"dense\")', 'matrix([...])'],\n  'description': 'Create a matrix.',\n  'examples': ['[]', '[1, 2, 3]', '[1, 2, 3; 4, 5, 6]', 'matrix()', 'matrix([3, 4])', 'matrix([3, 4; 5, 6], \"sparse\")', 'matrix([3, 4; 5, 6], \"sparse\", \"number\")'],\n  'seealso': ['bignumber', 'boolean', 'complex', 'index', 'number', 'string', 'unit', 'sparse']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'number',\n  'category': 'Construction',\n  'syntax': ['x', 'number(x)', 'number(unit, valuelessUnit)'],\n  'description': 'Create a number or convert a string or boolean into a number.',\n  'examples': ['2', '2e3', '4.05', 'number(2)', 'number(\"7.2\")', 'number(true)', 'number([true, false, true, true])', 'number(unit(\"52cm\"), \"m\")'],\n  'seealso': ['bignumber', 'boolean', 'complex', 'fraction', 'index', 'matrix', 'string', 'unit']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'sparse',\n  'category': 'Construction',\n  'syntax': ['sparse()', 'sparse([a1, b1, ...; a1, b2, ...])', 'sparse([a1, b1, ...; a1, b2, ...], \"number\")'],\n  'description': 'Create a sparse matrix.',\n  'examples': ['sparse()', 'sparse([3, 4; 5, 6])', 'sparse([3, 0; 5, 0], \"number\")'],\n  'seealso': ['bignumber', 'boolean', 'complex', 'index', 'number', 'string', 'unit', 'matrix']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'splitUnit',\n  'category': 'Construction',\n  'syntax': ['splitUnit(unit: Unit, parts: Unit[])'],\n  'description': 'Split a unit in an array of units whose sum is equal to the original unit.',\n  'examples': ['splitUnit(1 m, [\"feet\", \"inch\"])'],\n  'seealso': ['unit', 'createUnit']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'string',\n  'category': 'Construction',\n  'syntax': ['\"text\"', 'string(x)'],\n  'description': 'Create a string or convert a value to a string',\n  'examples': ['\"Hello World!\"', 'string(4.2)', 'string(3 + 2i)'],\n  'seealso': ['bignumber', 'boolean', 'complex', 'index', 'matrix', 'number', 'unit']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'unit',\n  'category': 'Construction',\n  'syntax': ['value unit', 'unit(value, unit)', 'unit(string)'],\n  'description': 'Create a unit.',\n  'examples': ['5.5 mm', '3 inch', 'unit(7.1, \"kilogram\")', 'unit(\"23 deg\")'],\n  'seealso': ['bignumber', 'boolean', 'complex', 'index', 'matrix', 'number', 'string']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'false',\n  'category': 'Constants',\n  'syntax': ['false'],\n  'description': 'Boolean value false',\n  'examples': ['false'],\n  'seealso': ['true']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'i',\n  'category': 'Constants',\n  'syntax': ['i'],\n  'description': 'Imaginary unit, defined as i*i=-1. A complex number is described as a + b*i, where a is the real part, and b is the imaginary part.',\n  'examples': ['i', 'i * i', 'sqrt(-1)'],\n  'seealso': []\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'Infinity',\n  'category': 'Constants',\n  'syntax': ['Infinity'],\n  'description': 'Infinity, a number which is larger than the maximum number that can be handled by a floating point number.',\n  'examples': ['Infinity', '1 / 0'],\n  'seealso': []\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'LN2',\n  'category': 'Constants',\n  'syntax': ['LN2'],\n  'description': 'Returns the natural logarithm of 2, approximately equal to 0.693',\n  'examples': ['LN2', 'log(2)'],\n  'seealso': []\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'LN10',\n  'category': 'Constants',\n  'syntax': ['LN10'],\n  'description': 'Returns the natural logarithm of 10, approximately equal to 2.302',\n  'examples': ['LN10', 'log(10)'],\n  'seealso': []\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'LOG2E',\n  'category': 'Constants',\n  'syntax': ['LOG2E'],\n  'description': 'Returns the base-2 logarithm of E, approximately equal to 1.442',\n  'examples': ['LOG2E', 'log(e, 2)'],\n  'seealso': []\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'LOG10E',\n  'category': 'Constants',\n  'syntax': ['LOG10E'],\n  'description': 'Returns the base-10 logarithm of E, approximately equal to 0.434',\n  'examples': ['LOG10E', 'log(e, 10)'],\n  'seealso': []\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'NaN',\n  'category': 'Constants',\n  'syntax': ['NaN'],\n  'description': 'Not a number',\n  'examples': ['NaN', '0 / 0'],\n  'seealso': []\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'null',\n  'category': 'Constants',\n  'syntax': ['null'],\n  'description': 'Value null',\n  'examples': ['null'],\n  'seealso': ['true', 'false']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'phi',\n  'category': 'Constants',\n  'syntax': ['phi'],\n  'description': 'Phi is the golden ratio. Two quantities are in the golden ratio if their ratio is the same as the ratio of their sum to the larger of the two quantities. Phi is defined as `(1 + sqrt(5)) / 2` and is approximately 1.618034...',\n  'examples': ['phi'],\n  'seealso': []\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'SQRT1_2',\n  'category': 'Constants',\n  'syntax': ['SQRT1_2'],\n  'description': 'Returns the square root of 1/2, approximately equal to 0.707',\n  'examples': ['SQRT1_2', 'sqrt(1/2)'],\n  'seealso': []\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'SQRT2',\n  'category': 'Constants',\n  'syntax': ['SQRT2'],\n  'description': 'Returns the square root of 2, approximately equal to 1.414',\n  'examples': ['SQRT2', 'sqrt(2)'],\n  'seealso': []\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'tau',\n  'category': 'Constants',\n  'syntax': ['tau'],\n  'description': 'Tau is the ratio constant of a circle\\'s circumference to radius, equal to 2 * pi, approximately 6.2832.',\n  'examples': ['tau', '2 * pi'],\n  'seealso': ['pi']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'true',\n  'category': 'Constants',\n  'syntax': ['true'],\n  'description': 'Boolean value true',\n  'examples': ['true'],\n  'seealso': ['false']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'version',\n  'category': 'Constants',\n  'syntax': ['version'],\n  'description': 'A string with the version number of math.js',\n  'examples': ['version'],\n  'seealso': []\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'config',\n  'category': 'Core',\n  'syntax': ['config()', 'config(options)'],\n  'description': 'Get configuration or change configuration.',\n  'examples': ['config()', '1/3 + 1/4', 'config({number: \"Fraction\"})', '1/3 + 1/4'],\n  'seealso': []\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'import',\n  'category': 'Core',\n  'syntax': ['import(functions)', 'import(functions, options)'],\n  'description': 'Import functions or constants from an object.',\n  'examples': ['import({myFn: f(x)=x^2, myConstant: 32 })', 'myFn(2)', 'myConstant'],\n  'seealso': []\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'typed',\n  'category': 'Core',\n  'syntax': ['typed(signatures)', 'typed(name, signatures)'],\n  'description': 'Create a typed function.',\n  'examples': ['double = typed({ \"number, number\": f(x)=x+x })', 'double(2)', 'double(\"hello\")'],\n  'seealso': []\n};"],"sourceRoot":""}