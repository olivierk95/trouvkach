{"version":3,"sources":["webpack:///./assets/gif/giphy.gif","webpack:///./scss/app.scss?817d","webpack:///./scss/app.scss","webpack:///./components/Map.js","webpack:///./components/AtmMap.js","webpack:///./app.js"],"names":["module","exports","__webpack_require__","p","content","i","options","hmr","transform","insertInto","undefined","locals","push","center","lat","lng","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","err","console","warn","concat","code","message","enableHighAccuracy","timeout","maximumAge","MapContainer","_Component","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","state","showingInfoWindow","activeMarker","selectedPlace","terminals","loading","onMarkerClick","props","marker","e","setState","onClose","_inherits","Component","key","value","_this2","axios","get","then","res","data","_this3","renderMarkers","filter","item","address","map","el","react_default","a","createElement","dist","_id","onClick","name","title","position","Fragment","src","gif","alt","google","zoom","style","width","height","margin","initialCenter","visible","googleApiWrapper","apiKey","AtmMap","React","react","className","Map","ReactDOM","render","AtmMap_AtmMap","document","querySelector"],"mappings":"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","file":"js/54db8149ac0f8b5da375.js","sourcesContent":["module.exports = __webpack_public_path__ + \"assets/gif/giphy.gif\";","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./app.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./app.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./app.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".container {\\n  margin: 0 auto;\\n  flex-direction: row;\\n  text-align: center; }\\n\\n#map {\\n  height: 100%; }\\n\\nhtml, body {\\n  height: 100%;\\n  margin: 0;\\n  padding: 0;\\n  background-color: #1A2632; }\\n  html h1, body h1 {\\n    color: white; }\\n\", \"\"]);\n\n","import React, {Component} from \"react\";\nimport axios from \"axios\";\nimport {\n    Map,\n    GoogleApiWrapper as googleApiWrapper,\n    InfoWindow,\n    Marker,\n} from \"google-maps-react\";\nimport gif from \"../assets/gif/giphy.gif\";\n\nlet center = {lat: \"\", lng: \"\"},\n    zoom = 8;\n\nconst options = {\n    enableHighAccuracy: true,\n    timeout: 5000,\n    maximumAge: 0,\n};\n\nconst error = err => {\n    console.warn(`ERREUR (${err.code}): ${err.message}`);\n};\nconst success = pos => {\n    center = {\n        lat: pos.coords.latitude,\n        lng: pos.coords.longitude,\n    };\n};\n\nnavigator.geolocation.getCurrentPosition(success, error, options);\n\nexport class MapContainer extends Component {\n    state = {\n        showingInfoWindow: false, // Hides or the shows the infoWindow\n        activeMarker: {}, // Shows the active marker upon click\n        selectedPlace: {}, // Shows the infoWindow to the selected place upon a marker\n        terminals: [], // fetch all terminals\n        loading: false,\n    };\n\n    componentDidMount() {\n        axios.get(`/api/terminals`).then(res => {\n            this.setState({\n                terminals: res.data.terminals,\n                loading: true,\n            });\n        });\n    }\n\n    onMarkerClick = (props, marker, e) =>\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true,\n        });\n\n    onClose = props => {\n        if (this.state.showingInfoWindow) {\n            this.setState({\n                showingInfoWindow: false,\n                activeMarker: null,\n            });\n        }\n    };\n\n    render() {\n        const mapStyles = {\n            width: \"95%\",\n            height: \"75%\",\n            margin: \"0 auto\",\n        };\n\n        const renderMarkers = this.state.terminals\n            .filter(item => item.address != null)\n            .map(el => {\n                return (\n                    <Marker\n                        key={el._id}\n                        onClick={this.onMarkerClick}\n                        name={el.address}\n                        title={el.address}\n                        position={{lat: el.latitude, lng: el.longitude}}\n                    />\n                );\n            });\n\n        return (\n            <>\n                {!this.state.loading && (\n                    <div>\n                        <h3>Don't worry ! It's loading...</h3>\n                        <img src={gif} alt=\"loading\"/>\n                    </div>\n                )}\n                {this.state.loading && (\n                    <Map\n                        google={this.props.google}\n                        zoom={zoom}\n                        style={mapStyles}\n                        initialCenter={center}>\n                        <Marker\n                            onClick={this.onMarkerClick}\n                            name={\"You're here\"}\n                        />\n                        {renderMarkers}\n                        <InfoWindow\n                            marker={this.state.activeMarker}\n                            visible={this.state.showingInfoWindow}\n                            onClose={this.onClose}>\n                            <div>\n                                <h4>{this.state.selectedPlace.name}</h4>\n                            </div>\n                        </InfoWindow>\n                    </Map>\n                )}\n            </>\n        );\n    }\n}\n\nexport default googleApiWrapper({\n    apiKey: \"AIzaSyDalvpxv-7crRgGa3MNhZiWIClcM1urB2o\",\n})(MapContainer);\n","/* becodeorg/trouvkach\n *\n * /src/client/components/hello.js - Hello Component\n *\n * coded by leny@BeCode\n * started at 15/02/2019\n */\n\nimport * as React from \"react\";\nimport Map from \"./Map\";\n\nimport \"../scss/app.scss\";\n\nexport default class AtmMap extends React.Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <h1>{\"Check ATM \"}</h1>\n                <hr />\n                <br />\n                <div>\n                    <Map />\n                </div>\n            </div>\n        );\n    }\n}\n","/* becodeorg/trouvkach\n *\n * /src/client/app.js - Client entry point\n *\n * coded by leny@BeCode\n * started at 15/02/2019\n */\n\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./calculate_distance\";\n\nimport AtmMap from \"./components/AtmMap\";\n\nReactDOM.render(<AtmMap />, document.querySelector(\"#app\"));\n"],"sourceRoot":""}