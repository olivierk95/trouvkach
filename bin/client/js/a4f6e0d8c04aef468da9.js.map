{"version":3,"sources":["webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/index.js"],"names":["exports","name","path","factory","construction","config","load","typed","docs","bignumber","__webpack_require__","complex","createUnit","fraction","index","matrix","number","sparse","splitUnit","string","unit","e","E","i","LN2","LN10","LOG2E","LOG10E","NaN","pi","PI","phi","SQRT1_2","SQRT2","tau","version","speedOfLight","description","examples","gravitationConstant","planckConstant","reducedPlanckConstant","magneticConstant","electricConstant","vacuumImpedance","coulomb","elementaryCharge","bohrMagneton","conductanceQuantum","inverseConductanceQuantum","magneticFluxQuantum","nuclearMagneton","klitzing","bohrRadius","classicalElectronRadius","electronMass","fermiCoupling","fineStructure","hartreeEnergy","protonMass","deuteronMass","neutronMass","quantumOfCirculation","rydberg","thomsonCrossSection","weakMixingAngle","efimovFactor","atomicMass","avogadro","boltzmann","faraday","firstRadiation","loschmidt","gasConstant","molarPlanckConstant","molarVolume","sackurTetrode","secondRadiation","stefanBoltzmann","wienDisplacement","molarMass","molarMassC12","gravity","planckLength","planckMass","planckTime","planckCharge","planckTemperature","derivative","lsolve","lup","lusolve","simplify","rationalize","slu","usolve","qr","abs","add","cbrt","ceil","cube","divide","dotDivide","dotMultiply","dotPow","exp","expm","expm1","fix","floor","gcd","hypot","lcm","log","log2","log1p","log10","mod","multiply","norm","nthRoot","nthRoots","pow","round","sign","sqrt","sqrtm","square","subtract","unaryMinus","unaryPlus","xgcd","bitAnd","bitNot","bitOr","bitXor","leftShift","rightArithShift","rightLogShift","bellNumbers","catalan","composition","stirlingS2","arg","conj","re","im","help","distance","intersect","cross","ctranspose","det","diag","dot","getMatrixDataType","identity","filter","flatten","forEach","inv","kron","map","ones","partitionSelect","range","resize","reshape","size","sort","squeeze","subset","trace","transpose","zeros","combinations","factorial","gamma","kldivergence","multinomial","permutations","pickRandom","random","randomInt","compare","compareNatural","compareText","deepEqual","equalText","larger","largerEq","smaller","smallerEq","unequal","setCartesian","setDifference","setDistinct","setIntersect","setIsSubset","setMultiplicity","setPowerset","setSize","setSymDifference","setUnion","erf","mad","max","mean","median","min","mode","prod","quantileSeq","std","sum","acos","acosh","acot","acoth","acsc","acsch","asec","asech","asin","asinh","atan","atanh","atan2","cos","cosh","cot","coth","csc","csch","sec","sech","sin","sinh","tan","tanh","to","clone","format","isNaN","isInteger","isNegative","isNumeric","hasNumericValue","isPositive","isPrime","isZero"],"mappings":"2FAwbAA,EAAAC,KAAA,OACAD,EAAAE,KAAA,aACAF,EAAAG,QAxbA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA,GAkbA,OAhbAA,EAAAC,UAAmBC,EAAQ,KAC3BF,EAAA,QAAoBE,EAAQ,KAC5BF,EAAAG,QAAiBD,EAAQ,KACzBF,EAAAI,WAAoBF,EAAQ,KAC5BF,EAAAK,SAAkBH,EAAQ,KAC1BF,EAAAM,MAAeJ,EAAQ,KACvBF,EAAAO,OAAgBL,EAAQ,KACxBF,EAAAQ,OAAgBN,EAAQ,KACxBF,EAAAS,OAAgBP,EAAQ,KACxBF,EAAAU,UAAmBR,EAAQ,KAC3BF,EAAAW,OAAgBT,EAAQ,KACxBF,EAAAY,KAAcV,EAAQ,KAEtBF,EAAAa,EAAWX,EAAQ,KACnBF,EAAAc,EAAWZ,EAAQ,KACnBF,EAAA,MAAkBE,EAAQ,KAC1BF,EAAAe,EAAWb,EAAQ,KACnBF,EAAA,KAAqBE,EAAQ,KAC7BF,EAAAgB,IAAad,EAAQ,KACrBF,EAAAiB,KAAcf,EAAQ,KACtBF,EAAAkB,MAAehB,EAAQ,KACvBF,EAAAmB,OAAgBjB,EAAQ,KACxBF,EAAAoB,IAAalB,EAAQ,KACrBF,EAAA,KAAiBE,EAAQ,KACzBF,EAAAqB,GAAYnB,EAAQ,KACpBF,EAAAsB,GAAYpB,EAAQ,KACpBF,EAAAuB,IAAarB,EAAQ,KACrBF,EAAAwB,QAAiBtB,EAAQ,KACzBF,EAAAyB,MAAevB,EAAQ,KACvBF,EAAA0B,IAAaxB,EAAQ,KACrBF,EAAA,KAAiBE,EAAQ,KACzBF,EAAA2B,QAAiBzB,EAAQ,KAGzBF,EAAA4B,aAAA,CACAC,YAAA,2BACAC,SAAA,kBAEA9B,EAAA+B,oBAAA,CACAF,YAAA,oCACAC,SAAA,yBAEA9B,EAAAgC,eAAA,CACAH,YAAA,kBACAC,SAAA,oBAEA9B,EAAAiC,sBAAA,CACAJ,YAAA,0BACAC,SAAA,2BAEA9B,EAAAkC,iBAAA,CACAL,YAAA,0CACAC,SAAA,sBAEA9B,EAAAmC,iBAAA,CACAN,YAAA,0CACAC,SAAA,sBAEA9B,EAAAoC,gBAAA,CACAP,YAAA,qCACAC,SAAA,qBAEA9B,EAAAqC,QAAA,CACAR,YAAA,qBACAC,SAAA,aAEA9B,EAAAsC,iBAAA,CACAT,YAAA,oBACAC,SAAA,sBAEA9B,EAAAuC,aAAA,CACAV,YAAA,gBACAC,SAAA,kBAEA9B,EAAAwC,mBAAA,CACAX,YAAA,sBACAC,SAAA,wBAEA9B,EAAAyC,0BAAA,CACAZ,YAAA,8BACAC,SAAA,+BAGA9B,EAAA0C,oBAAA,CACAb,YAAA,wBACAC,SAAA,yBAEA9B,EAAA2C,gBAAA,CACAd,YAAA,mBACAC,SAAA,qBAEA9B,EAAA4C,SAAA,CACAf,YAAA,wBACAC,SAAA,cAEA9B,EAAA6C,WAAA,CACAhB,YAAA,cACAC,SAAA,gBAEA9B,EAAA8C,wBAAA,CACAjB,YAAA,4BACAC,SAAA,6BAEA9B,EAAA+C,aAAA,CACAlB,YAAA,gBACAC,SAAA,kBAEA9B,EAAAgD,cAAA,CACAnB,YAAA,0BACAC,SAAA,mBAEA9B,EAAAiD,cAAA,CACApB,YAAA,0BACAC,SAAA,mBAEA9B,EAAAkD,cAAA,CACArB,YAAA,iBACAC,SAAA,mBAEA9B,EAAAmD,WAAA,CACAtB,YAAA,cACAC,SAAA,gBAEA9B,EAAAoD,aAAA,CACAvB,YAAA,gBACAC,SAAA,kBAEA9B,EAAAqD,YAAA,CACAxB,YAAA,eACAC,SAAA,iBAEA9B,EAAAsD,qBAAA,CACAzB,YAAA,yBACAC,SAAA,0BAEA9B,EAAAuD,QAAA,CACA1B,YAAA,mBACAC,SAAA,aAEA9B,EAAAwD,oBAAA,CACA3B,YAAA,wBACAC,SAAA,yBAEA9B,EAAAyD,gBAAA,CACA5B,YAAA,oBACAC,SAAA,qBAEA9B,EAAA0D,aAAA,CACA7B,YAAA,gBACAC,SAAA,kBAEA9B,EAAA2D,WAAA,CACA9B,YAAA,uBACAC,SAAA,gBAEA9B,EAAA4D,SAAA,CACA/B,YAAA,oBACAC,SAAA,cAEA9B,EAAA6D,UAAA,CACAhC,YAAA,qBACAC,SAAA,eAEA9B,EAAA8D,QAAA,CACAjC,YAAA,mBACAC,SAAA,aAEA9B,EAAA+D,eAAA,CACAlC,YAAA,2BACAC,SAAA,oBAEA9B,EAAAgE,UAAA,CACAnC,YAAA,qDACAC,SAAA,eAEA9B,EAAAiE,YAAA,CACApC,YAAA,eACAC,SAAA,iBAEA9B,EAAAkE,oBAAA,CACArC,YAAA,wBACAC,SAAA,yBAEA9B,EAAAmE,YAAA,CACAtC,YAAA,+DACAC,SAAA,iBAEA9B,EAAAoE,cAAA,CACAvC,YAAA,qDACAC,SAAA,mBAEA9B,EAAAqE,gBAAA,CACAxC,YAAA,4BACAC,SAAA,qBAEA9B,EAAAsE,gBAAA,CACAzC,YAAA,4BACAC,SAAA,qBAEA9B,EAAAuE,iBAAA,CACA1C,YAAA,iCACAC,SAAA,sBAGA9B,EAAAwE,UAAA,CACA3C,YAAA,sBACAC,SAAA,eAEA9B,EAAAyE,aAAA,CACA5C,YAAA,mCACAC,SAAA,kBAEA9B,EAAA0E,QAAA,CACA7C,YAAA,iFACAC,SAAA,aAEA9B,EAAA2E,aAAA,CACA9C,YAAA,gBACAC,SAAA,kBAEA9B,EAAA4E,WAAA,CACA/C,YAAA,cACAC,SAAA,gBAEA9B,EAAA6E,WAAA,CACAhD,YAAA,cACAC,SAAA,gBAEA9B,EAAA8E,aAAA,CACAjD,YAAA,gBACAC,SAAA,kBAEA9B,EAAA+E,kBAAA,CACAlD,YAAA,qBACAC,SAAA,uBAGA9B,EAAAgF,WAAoB9E,EAAQ,KAC5BF,EAAAiF,OAAgB/E,EAAQ,KACxBF,EAAAkF,IAAahF,EAAQ,KACrBF,EAAAmF,QAAiBjF,EAAQ,KACzBF,EAAAoF,SAAkBlF,EAAQ,KAC1BF,EAAAqF,YAAqBnF,EAAQ,KAC7BF,EAAAsF,IAAapF,EAAQ,KACrBF,EAAAuF,OAAgBrF,EAAQ,KACxBF,EAAAwF,GAAYtF,EAAQ,KAEpBF,EAAAyF,IAAavF,EAAQ,KACrBF,EAAA0F,IAAaxF,EAAQ,KACrBF,EAAA2F,KAAczF,EAAQ,KACtBF,EAAA4F,KAAc1F,EAAQ,KACtBF,EAAA6F,KAAc3F,EAAQ,KACtBF,EAAA8F,OAAgB5F,EAAQ,KACxBF,EAAA+F,UAAmB7F,EAAQ,KAC3BF,EAAAgG,YAAqB9F,EAAQ,KAC7BF,EAAAiG,OAAgB/F,EAAQ,KACxBF,EAAAkG,IAAahG,EAAQ,KACrBF,EAAAmG,KAAcjG,EAAQ,KACtBF,EAAAoG,MAAelG,EAAQ,KACvBF,EAAAqG,IAAanG,EAAQ,KACrBF,EAAAsG,MAAepG,EAAQ,KACvBF,EAAAuG,IAAarG,EAAQ,KACrBF,EAAAwG,MAAetG,EAAQ,KACvBF,EAAAyG,IAAavG,EAAQ,KACrBF,EAAA0G,IAAaxG,EAAQ,KACrBF,EAAA2G,KAAczG,EAAQ,KACtBF,EAAA4G,MAAe1G,EAAQ,KACvBF,EAAA6G,MAAe3G,EAAQ,KACvBF,EAAA8G,IAAa5G,EAAQ,KACrBF,EAAA+G,SAAkB7G,EAAQ,KAC1BF,EAAAgH,KAAc9G,EAAQ,KACtBF,EAAAiH,QAAiB/G,EAAQ,KACzBF,EAAAkH,SAAkBhH,EAAQ,KAC1BF,EAAAmH,IAAajH,EAAQ,KACrBF,EAAAoH,MAAelH,EAAQ,KACvBF,EAAAqH,KAAcnH,EAAQ,KACtBF,EAAAsH,KAAcpH,EAAQ,KACtBF,EAAAuH,MAAerH,EAAQ,KACvBF,EAAAwH,OAAgBtH,EAAQ,KACxBF,EAAAyH,SAAkBvH,EAAQ,KAC1BF,EAAA0H,WAAoBxH,EAAQ,KAC5BF,EAAA2H,UAAmBzH,EAAQ,KAC3BF,EAAA4H,KAAc1H,EAAQ,KAEtBF,EAAA6H,OAAgB3H,EAAQ,KACxBF,EAAA8H,OAAgB5H,EAAQ,KACxBF,EAAA+H,MAAe7H,EAAQ,KACvBF,EAAAgI,OAAgB9H,EAAQ,KACxBF,EAAAiI,UAAmB/H,EAAQ,KAC3BF,EAAAkI,gBAAyBhI,EAAQ,KACjCF,EAAAmI,cAAuBjI,EAAQ,KAE/BF,EAAAoI,YAAqBlI,EAAQ,KAC7BF,EAAAqI,QAAiBnI,EAAQ,KACzBF,EAAAsI,YAAqBpI,EAAQ,KAC7BF,EAAAuI,WAAoBrI,EAAQ,KAE5BF,EAAA,OAAmBE,EAAQ,KAC3BF,EAAA,OAAmBE,EAAQ,KAC3BF,EAAA,MAAkBE,EAAQ,KAE1BF,EAAAwI,IAAatI,EAAQ,KACrBF,EAAAyI,KAAcvI,EAAQ,KACtBF,EAAA0I,GAAYxI,EAAQ,KACpBF,EAAA2I,GAAYzI,EAAQ,KAEpBF,EAAA,KAAiBE,EAAQ,KACzBF,EAAA4I,KAAc1I,EAAQ,KAEtBF,EAAA6I,SAAkB3I,EAAQ,KAC1BF,EAAA8I,UAAmB5I,EAAQ,KAE3BF,EAAA,IAAgBE,EAAQ,KACxBF,EAAA,IAAgBE,EAAQ,KACxBF,EAAA,GAAeE,EAAQ,KACvBF,EAAA,IAAgBE,EAAQ,KAExBF,EAAA,OAAmBE,EAAQ,KAC3BF,EAAA+I,MAAe7I,EAAQ,KACvBF,EAAAgJ,WAAoB9I,EAAQ,KAC5BF,EAAAiJ,IAAa/I,EAAQ,KACrBF,EAAAkJ,KAAchJ,EAAQ,KACtBF,EAAAmJ,IAAajJ,EAAQ,KACrBF,EAAAoJ,kBAA2BlJ,EAAQ,KACnCF,EAAAqJ,SAAkBnJ,EAAQ,KAC1BF,EAAAsJ,OAAgBpJ,EAAQ,KACxBF,EAAAuJ,QAAiBrJ,EAAQ,KACzBF,EAAAwJ,QAAiBtJ,EAAQ,KACzBF,EAAAyJ,IAAavJ,EAAQ,KACrBF,EAAA0J,KAAcxJ,EAAQ,KACtBF,EAAA2J,IAAazJ,EAAQ,KACrBF,EAAA4J,KAAc1J,EAAQ,KACtBF,EAAA6J,gBAAyB3J,EAAQ,KACjCF,EAAA8J,MAAe5J,EAAQ,KACvBF,EAAA+J,OAAgB7J,EAAQ,KACxBF,EAAAgK,QAAiB9J,EAAQ,KACzBF,EAAAiK,KAAc/J,EAAQ,KACtBF,EAAAkK,KAAchK,EAAQ,KACtBF,EAAAmK,QAAiBjK,EAAQ,KACzBF,EAAAoK,OAAgBlK,EAAQ,KACxBF,EAAAqK,MAAenK,EAAQ,KACvBF,EAAAsK,UAAmBpK,EAAQ,KAC3BF,EAAAuK,MAAerK,EAAQ,KAEvBF,EAAAwK,aAAsBtK,EAAQ,KAE9BF,EAAAyK,UAAmBvK,EAAQ,KAC3BF,EAAA0K,MAAexK,EAAQ,KACvBF,EAAA2K,aAAsBzK,EAAQ,KAC9BF,EAAA4K,YAAqB1K,EAAQ,KAC7BF,EAAA6K,aAAsB3K,EAAQ,KAC9BF,EAAA8K,WAAoB5K,EAAQ,KAC5BF,EAAA+K,OAAgB7K,EAAQ,KACxBF,EAAAgL,UAAmB9K,EAAQ,KAE3BF,EAAAiL,QAAiB/K,EAAQ,KACzBF,EAAAkL,eAAwBhL,EAAQ,KAChCF,EAAAmL,YAAqBjL,EAAQ,KAC7BF,EAAAoL,UAAmBlL,EAAQ,KAC3BF,EAAA,MAAkBE,EAAQ,KAC1BF,EAAAqL,UAAmBnL,EAAQ,KAC3BF,EAAAsL,OAAgBpL,EAAQ,KACxBF,EAAAuL,SAAkBrL,EAAQ,KAC1BF,EAAAwL,QAAiBtL,EAAQ,KACzBF,EAAAyL,UAAmBvL,EAAQ,KAC3BF,EAAA0L,QAAiBxL,EAAQ,KAEzBF,EAAA2L,aAAsBzL,EAAQ,KAC9BF,EAAA4L,cAAuB1L,EAAQ,KAC/BF,EAAA6L,YAAqB3L,EAAQ,KAC7BF,EAAA8L,aAAsB5L,EAAQ,KAC9BF,EAAA+L,YAAqB7L,EAAQ,KAC7BF,EAAAgM,gBAAyB9L,EAAQ,KACjCF,EAAAiM,YAAqB/L,EAAQ,KAC7BF,EAAAkM,QAAiBhM,EAAQ,KACzBF,EAAAmM,iBAA0BjM,EAAQ,KAClCF,EAAAoM,SAAkBlM,EAAQ,KAE1BF,EAAAqM,IAAanM,EAAQ,KAErBF,EAAAsM,IAAapM,EAAQ,KACrBF,EAAAuM,IAAarM,EAAQ,KACrBF,EAAAwM,KAActM,EAAQ,KACtBF,EAAAyM,OAAgBvM,EAAQ,KACxBF,EAAA0M,IAAaxM,EAAQ,KACrBF,EAAA2M,KAAczM,EAAQ,KACtBF,EAAA4M,KAAc1M,EAAQ,KACtBF,EAAA6M,YAAqB3M,EAAQ,KAC7BF,EAAA8M,IAAa5M,EAAQ,KACrBF,EAAA+M,IAAa7M,EAAQ,KACrBF,EAAA,IAAgBE,EAAQ,KAExBF,EAAAgN,KAAc9M,EAAQ,KACtBF,EAAAiN,MAAe/M,EAAQ,KACvBF,EAAAkN,KAAchN,EAAQ,KACtBF,EAAAmN,MAAejN,EAAQ,KACvBF,EAAAoN,KAAclN,EAAQ,KACtBF,EAAAqN,MAAenN,EAAQ,KACvBF,EAAAsN,KAAcpN,EAAQ,KACtBF,EAAAuN,MAAerN,EAAQ,KACvBF,EAAAwN,KAActN,EAAQ,KACtBF,EAAAyN,MAAevN,EAAQ,KACvBF,EAAA0N,KAAcxN,EAAQ,KACtBF,EAAA2N,MAAezN,EAAQ,KACvBF,EAAA4N,MAAe1N,EAAQ,KACvBF,EAAA6N,IAAa3N,EAAQ,KACrBF,EAAA8N,KAAc5N,EAAQ,KACtBF,EAAA+N,IAAa7N,EAAQ,KACrBF,EAAAgO,KAAc9N,EAAQ,KACtBF,EAAAiO,IAAa/N,EAAQ,KACrBF,EAAAkO,KAAchO,EAAQ,KACtBF,EAAAmO,IAAajO,EAAQ,KACrBF,EAAAoO,KAAclO,EAAQ,KACtBF,EAAAqO,IAAanO,EAAQ,KACrBF,EAAAsO,KAAcpO,EAAQ,KACtBF,EAAAuO,IAAarO,EAAQ,KACrBF,EAAAwO,KAActO,EAAQ,KAEtBF,EAAAyO,GAAYvO,EAAQ,KAEpBF,EAAA0O,MAAexO,EAAQ,KACvBF,EAAA2O,OAAgBzO,EAAQ,KACxBF,EAAA4O,MAAe1O,EAAQ,KACvBF,EAAA6O,UAAmB3O,EAAQ,KAC3BF,EAAA8O,WAAoB5O,EAAQ,KAC5BF,EAAA+O,UAAmB7O,EAAQ,KAC3BF,EAAAgP,gBAAyB9O,EAAQ,KACjCF,EAAAiP,WAAoB/O,EAAQ,KAC5BF,EAAAkP,QAAiBhP,EAAQ,KACzBF,EAAAmP,OAAgBjP,EAAQ,KAExBF,EAAA,OAAmBE,EAAQ,KAC3BF","file":"js/a4f6e0d8c04aef468da9.js","sourcesContent":["\"use strict\";\n\nfunction factory(construction, config, load, typed) {\n  var docs = {}; // construction functions\n\n  docs.bignumber = require('./construction/bignumber');\n  docs['boolean'] = require('./construction/boolean');\n  docs.complex = require('./construction/complex');\n  docs.createUnit = require('./construction/createUnit');\n  docs.fraction = require('./construction/fraction');\n  docs.index = require('./construction/index');\n  docs.matrix = require('./construction/matrix');\n  docs.number = require('./construction/number');\n  docs.sparse = require('./construction/sparse');\n  docs.splitUnit = require('./construction/splitUnit');\n  docs.string = require('./construction/string');\n  docs.unit = require('./construction/unit'); // constants\n\n  docs.e = require('./constants/e');\n  docs.E = require('./constants/e');\n  docs['false'] = require('./constants/false');\n  docs.i = require('./constants/i');\n  docs['Infinity'] = require('./constants/Infinity');\n  docs.LN2 = require('./constants/LN2');\n  docs.LN10 = require('./constants/LN10');\n  docs.LOG2E = require('./constants/LOG2E');\n  docs.LOG10E = require('./constants/LOG10E');\n  docs.NaN = require('./constants/NaN');\n  docs['null'] = require('./constants/null');\n  docs.pi = require('./constants/pi');\n  docs.PI = require('./constants/pi');\n  docs.phi = require('./constants/phi');\n  docs.SQRT1_2 = require('./constants/SQRT1_2');\n  docs.SQRT2 = require('./constants/SQRT2');\n  docs.tau = require('./constants/tau');\n  docs['true'] = require('./constants/true');\n  docs.version = require('./constants/version'); // physical constants\n  // TODO: more detailed docs for physical constants\n\n  docs.speedOfLight = {\n    description: 'Speed of light in vacuum',\n    examples: ['speedOfLight']\n  };\n  docs.gravitationConstant = {\n    description: 'Newtonian constant of gravitation',\n    examples: ['gravitationConstant']\n  };\n  docs.planckConstant = {\n    description: 'Planck constant',\n    examples: ['planckConstant']\n  };\n  docs.reducedPlanckConstant = {\n    description: 'Reduced Planck constant',\n    examples: ['reducedPlanckConstant']\n  };\n  docs.magneticConstant = {\n    description: 'Magnetic constant (vacuum permeability)',\n    examples: ['magneticConstant']\n  };\n  docs.electricConstant = {\n    description: 'Electric constant (vacuum permeability)',\n    examples: ['electricConstant']\n  };\n  docs.vacuumImpedance = {\n    description: 'Characteristic impedance of vacuum',\n    examples: ['vacuumImpedance']\n  };\n  docs.coulomb = {\n    description: 'Coulomb\\'s constant',\n    examples: ['coulomb']\n  };\n  docs.elementaryCharge = {\n    description: 'Elementary charge',\n    examples: ['elementaryCharge']\n  };\n  docs.bohrMagneton = {\n    description: 'Borh magneton',\n    examples: ['bohrMagneton']\n  };\n  docs.conductanceQuantum = {\n    description: 'Conductance quantum',\n    examples: ['conductanceQuantum']\n  };\n  docs.inverseConductanceQuantum = {\n    description: 'Inverse conductance quantum',\n    examples: ['inverseConductanceQuantum'] // docs.josephson = {description: 'Josephson constant', examples: ['josephson']}\n\n  };\n  docs.magneticFluxQuantum = {\n    description: 'Magnetic flux quantum',\n    examples: ['magneticFluxQuantum']\n  };\n  docs.nuclearMagneton = {\n    description: 'Nuclear magneton',\n    examples: ['nuclearMagneton']\n  };\n  docs.klitzing = {\n    description: 'Von Klitzing constant',\n    examples: ['klitzing']\n  };\n  docs.bohrRadius = {\n    description: 'Borh radius',\n    examples: ['bohrRadius']\n  };\n  docs.classicalElectronRadius = {\n    description: 'Classical electron radius',\n    examples: ['classicalElectronRadius']\n  };\n  docs.electronMass = {\n    description: 'Electron mass',\n    examples: ['electronMass']\n  };\n  docs.fermiCoupling = {\n    description: 'Fermi coupling constant',\n    examples: ['fermiCoupling']\n  };\n  docs.fineStructure = {\n    description: 'Fine-structure constant',\n    examples: ['fineStructure']\n  };\n  docs.hartreeEnergy = {\n    description: 'Hartree energy',\n    examples: ['hartreeEnergy']\n  };\n  docs.protonMass = {\n    description: 'Proton mass',\n    examples: ['protonMass']\n  };\n  docs.deuteronMass = {\n    description: 'Deuteron Mass',\n    examples: ['deuteronMass']\n  };\n  docs.neutronMass = {\n    description: 'Neutron mass',\n    examples: ['neutronMass']\n  };\n  docs.quantumOfCirculation = {\n    description: 'Quantum of circulation',\n    examples: ['quantumOfCirculation']\n  };\n  docs.rydberg = {\n    description: 'Rydberg constant',\n    examples: ['rydberg']\n  };\n  docs.thomsonCrossSection = {\n    description: 'Thomson cross section',\n    examples: ['thomsonCrossSection']\n  };\n  docs.weakMixingAngle = {\n    description: 'Weak mixing angle',\n    examples: ['weakMixingAngle']\n  };\n  docs.efimovFactor = {\n    description: 'Efimov factor',\n    examples: ['efimovFactor']\n  };\n  docs.atomicMass = {\n    description: 'Atomic mass constant',\n    examples: ['atomicMass']\n  };\n  docs.avogadro = {\n    description: 'Avogadro\\'s number',\n    examples: ['avogadro']\n  };\n  docs.boltzmann = {\n    description: 'Boltzmann constant',\n    examples: ['boltzmann']\n  };\n  docs.faraday = {\n    description: 'Faraday constant',\n    examples: ['faraday']\n  };\n  docs.firstRadiation = {\n    description: 'First radiation constant',\n    examples: ['firstRadiation']\n  };\n  docs.loschmidt = {\n    description: 'Loschmidt constant at T=273.15 K and p=101.325 kPa',\n    examples: ['loschmidt']\n  };\n  docs.gasConstant = {\n    description: 'Gas constant',\n    examples: ['gasConstant']\n  };\n  docs.molarPlanckConstant = {\n    description: 'Molar Planck constant',\n    examples: ['molarPlanckConstant']\n  };\n  docs.molarVolume = {\n    description: 'Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa',\n    examples: ['molarVolume']\n  };\n  docs.sackurTetrode = {\n    description: 'Sackur-Tetrode constant at T=1 K and p=101.325 kPa',\n    examples: ['sackurTetrode']\n  };\n  docs.secondRadiation = {\n    description: 'Second radiation constant',\n    examples: ['secondRadiation']\n  };\n  docs.stefanBoltzmann = {\n    description: 'Stefan-Boltzmann constant',\n    examples: ['stefanBoltzmann']\n  };\n  docs.wienDisplacement = {\n    description: 'Wien displacement law constant',\n    examples: ['wienDisplacement'] // docs.spectralRadiance = {description: 'First radiation constant for spectral radiance', examples: ['spectralRadiance']}\n\n  };\n  docs.molarMass = {\n    description: 'Molar mass constant',\n    examples: ['molarMass']\n  };\n  docs.molarMassC12 = {\n    description: 'Molar mass constant of carbon-12',\n    examples: ['molarMassC12']\n  };\n  docs.gravity = {\n    description: 'Standard acceleration of gravity (standard acceleration of free-fall on Earth)',\n    examples: ['gravity']\n  };\n  docs.planckLength = {\n    description: 'Planck length',\n    examples: ['planckLength']\n  };\n  docs.planckMass = {\n    description: 'Planck mass',\n    examples: ['planckMass']\n  };\n  docs.planckTime = {\n    description: 'Planck time',\n    examples: ['planckTime']\n  };\n  docs.planckCharge = {\n    description: 'Planck charge',\n    examples: ['planckCharge']\n  };\n  docs.planckTemperature = {\n    description: 'Planck temperature',\n    examples: ['planckTemperature'] // functions - algebra\n\n  };\n  docs.derivative = require('./function/algebra/derivative');\n  docs.lsolve = require('./function/algebra/lsolve');\n  docs.lup = require('./function/algebra/lup');\n  docs.lusolve = require('./function/algebra/lusolve');\n  docs.simplify = require('./function/algebra/simplify');\n  docs.rationalize = require('./function/algebra/rationalize');\n  docs.slu = require('./function/algebra/slu');\n  docs.usolve = require('./function/algebra/usolve');\n  docs.qr = require('./function/algebra/qr'); // functions - arithmetic\n\n  docs.abs = require('./function/arithmetic/abs');\n  docs.add = require('./function/arithmetic/add');\n  docs.cbrt = require('./function/arithmetic/cbrt');\n  docs.ceil = require('./function/arithmetic/ceil');\n  docs.cube = require('./function/arithmetic/cube');\n  docs.divide = require('./function/arithmetic/divide');\n  docs.dotDivide = require('./function/arithmetic/dotDivide');\n  docs.dotMultiply = require('./function/arithmetic/dotMultiply');\n  docs.dotPow = require('./function/arithmetic/dotPow');\n  docs.exp = require('./function/arithmetic/exp');\n  docs.expm = require('./function/arithmetic/expm');\n  docs.expm1 = require('./function/arithmetic/expm1');\n  docs.fix = require('./function/arithmetic/fix');\n  docs.floor = require('./function/arithmetic/floor');\n  docs.gcd = require('./function/arithmetic/gcd');\n  docs.hypot = require('./function/arithmetic/hypot');\n  docs.lcm = require('./function/arithmetic/lcm');\n  docs.log = require('./function/arithmetic/log');\n  docs.log2 = require('./function/arithmetic/log2');\n  docs.log1p = require('./function/arithmetic/log1p');\n  docs.log10 = require('./function/arithmetic/log10');\n  docs.mod = require('./function/arithmetic/mod');\n  docs.multiply = require('./function/arithmetic/multiply');\n  docs.norm = require('./function/arithmetic/norm');\n  docs.nthRoot = require('./function/arithmetic/nthRoot');\n  docs.nthRoots = require('./function/arithmetic/nthRoots');\n  docs.pow = require('./function/arithmetic/pow');\n  docs.round = require('./function/arithmetic/round');\n  docs.sign = require('./function/arithmetic/sign');\n  docs.sqrt = require('./function/arithmetic/sqrt');\n  docs.sqrtm = require('./function/arithmetic/sqrtm');\n  docs.square = require('./function/arithmetic/square');\n  docs.subtract = require('./function/arithmetic/subtract');\n  docs.unaryMinus = require('./function/arithmetic/unaryMinus');\n  docs.unaryPlus = require('./function/arithmetic/unaryPlus');\n  docs.xgcd = require('./function/arithmetic/xgcd'); // functions - bitwise\n\n  docs.bitAnd = require('./function/bitwise/bitAnd');\n  docs.bitNot = require('./function/bitwise/bitNot');\n  docs.bitOr = require('./function/bitwise/bitOr');\n  docs.bitXor = require('./function/bitwise/bitXor');\n  docs.leftShift = require('./function/bitwise/leftShift');\n  docs.rightArithShift = require('./function/bitwise/rightArithShift');\n  docs.rightLogShift = require('./function/bitwise/rightLogShift'); // functions - combinatorics\n\n  docs.bellNumbers = require('./function/combinatorics/bellNumbers');\n  docs.catalan = require('./function/combinatorics/catalan');\n  docs.composition = require('./function/combinatorics/composition');\n  docs.stirlingS2 = require('./function/combinatorics/stirlingS2'); // functions - core\n\n  docs['config'] = require('./core/config');\n  docs['import'] = require('./core/import');\n  docs['typed'] = require('./core/typed'); // functions - complex\n\n  docs.arg = require('./function/complex/arg');\n  docs.conj = require('./function/complex/conj');\n  docs.re = require('./function/complex/re');\n  docs.im = require('./function/complex/im'); // functions - expression\n\n  docs['eval'] = require('./function/expression/eval');\n  docs.help = require('./function/expression/help'); // functions - geometry\n\n  docs.distance = require('./function/geometry/distance');\n  docs.intersect = require('./function/geometry/intersect'); // functions - logical\n\n  docs['and'] = require('./function/logical/and');\n  docs['not'] = require('./function/logical/not');\n  docs['or'] = require('./function/logical/or');\n  docs['xor'] = require('./function/logical/xor'); // functions - matrix\n\n  docs['concat'] = require('./function/matrix/concat');\n  docs.cross = require('./function/matrix/cross');\n  docs.ctranspose = require('./function/matrix/ctranspose');\n  docs.det = require('./function/matrix/det');\n  docs.diag = require('./function/matrix/diag');\n  docs.dot = require('./function/matrix/dot');\n  docs.getMatrixDataType = require('./function/matrix/getMatrixDataType');\n  docs.identity = require('./function/matrix/identity');\n  docs.filter = require('./function/matrix/filter');\n  docs.flatten = require('./function/matrix/flatten');\n  docs.forEach = require('./function/matrix/forEach');\n  docs.inv = require('./function/matrix/inv');\n  docs.kron = require('./function/matrix/kron');\n  docs.map = require('./function/matrix/map');\n  docs.ones = require('./function/matrix/ones');\n  docs.partitionSelect = require('./function/matrix/partitionSelect');\n  docs.range = require('./function/matrix/range');\n  docs.resize = require('./function/matrix/resize');\n  docs.reshape = require('./function/matrix/reshape');\n  docs.size = require('./function/matrix/size');\n  docs.sort = require('./function/matrix/sort');\n  docs.squeeze = require('./function/matrix/squeeze');\n  docs.subset = require('./function/matrix/subset');\n  docs.trace = require('./function/matrix/trace');\n  docs.transpose = require('./function/matrix/transpose');\n  docs.zeros = require('./function/matrix/zeros'); // functions - probability\n\n  docs.combinations = require('./function/probability/combinations'); // docs.distribution = require('./function/probability/distribution')\n\n  docs.factorial = require('./function/probability/factorial');\n  docs.gamma = require('./function/probability/gamma');\n  docs.kldivergence = require('./function/probability/kldivergence');\n  docs.multinomial = require('./function/probability/multinomial');\n  docs.permutations = require('./function/probability/permutations');\n  docs.pickRandom = require('./function/probability/pickRandom');\n  docs.random = require('./function/probability/random');\n  docs.randomInt = require('./function/probability/randomInt'); // functions - relational\n\n  docs.compare = require('./function/relational/compare');\n  docs.compareNatural = require('./function/relational/compareNatural');\n  docs.compareText = require('./function/relational/compareText');\n  docs.deepEqual = require('./function/relational/deepEqual');\n  docs['equal'] = require('./function/relational/equal');\n  docs.equalText = require('./function/relational/equalText');\n  docs.larger = require('./function/relational/larger');\n  docs.largerEq = require('./function/relational/largerEq');\n  docs.smaller = require('./function/relational/smaller');\n  docs.smallerEq = require('./function/relational/smallerEq');\n  docs.unequal = require('./function/relational/unequal'); // functions - set\n\n  docs.setCartesian = require('./function/set/setCartesian');\n  docs.setDifference = require('./function/set/setDifference');\n  docs.setDistinct = require('./function/set/setDistinct');\n  docs.setIntersect = require('./function/set/setIntersect');\n  docs.setIsSubset = require('./function/set/setIsSubset');\n  docs.setMultiplicity = require('./function/set/setMultiplicity');\n  docs.setPowerset = require('./function/set/setPowerset');\n  docs.setSize = require('./function/set/setSize');\n  docs.setSymDifference = require('./function/set/setSymDifference');\n  docs.setUnion = require('./function/set/setUnion'); // functions - special\n\n  docs.erf = require('./function/special/erf'); // functions - statistics\n\n  docs.mad = require('./function/statistics/mad');\n  docs.max = require('./function/statistics/max');\n  docs.mean = require('./function/statistics/mean');\n  docs.median = require('./function/statistics/median');\n  docs.min = require('./function/statistics/min');\n  docs.mode = require('./function/statistics/mode');\n  docs.prod = require('./function/statistics/prod');\n  docs.quantileSeq = require('./function/statistics/quantileSeq');\n  docs.std = require('./function/statistics/std');\n  docs.sum = require('./function/statistics/sum');\n  docs['var'] = require('./function/statistics/var'); // functions - trigonometry\n\n  docs.acos = require('./function/trigonometry/acos');\n  docs.acosh = require('./function/trigonometry/acosh');\n  docs.acot = require('./function/trigonometry/acot');\n  docs.acoth = require('./function/trigonometry/acoth');\n  docs.acsc = require('./function/trigonometry/acsc');\n  docs.acsch = require('./function/trigonometry/acsch');\n  docs.asec = require('./function/trigonometry/asec');\n  docs.asech = require('./function/trigonometry/asech');\n  docs.asin = require('./function/trigonometry/asin');\n  docs.asinh = require('./function/trigonometry/asinh');\n  docs.atan = require('./function/trigonometry/atan');\n  docs.atanh = require('./function/trigonometry/atanh');\n  docs.atan2 = require('./function/trigonometry/atan2');\n  docs.cos = require('./function/trigonometry/cos');\n  docs.cosh = require('./function/trigonometry/cosh');\n  docs.cot = require('./function/trigonometry/cot');\n  docs.coth = require('./function/trigonometry/coth');\n  docs.csc = require('./function/trigonometry/csc');\n  docs.csch = require('./function/trigonometry/csch');\n  docs.sec = require('./function/trigonometry/sec');\n  docs.sech = require('./function/trigonometry/sech');\n  docs.sin = require('./function/trigonometry/sin');\n  docs.sinh = require('./function/trigonometry/sinh');\n  docs.tan = require('./function/trigonometry/tan');\n  docs.tanh = require('./function/trigonometry/tanh'); // functions - units\n\n  docs.to = require('./function/units/to'); // functions - utils\n\n  docs.clone = require('./function/utils/clone');\n  docs.format = require('./function/utils/format');\n  docs.isNaN = require('./function/utils/isNaN');\n  docs.isInteger = require('./function/utils/isInteger');\n  docs.isNegative = require('./function/utils/isNegative');\n  docs.isNumeric = require('./function/utils/isNumeric');\n  docs.hasNumericValue = require('./function/utils/hasNumericValue');\n  docs.isPositive = require('./function/utils/isPositive');\n  docs.isPrime = require('./function/utils/isPrime');\n  docs.isZero = require('./function/utils/isZero'); // docs.print = require('./function/utils/print') // TODO: add documentation for print as soon as the parser supports objects.\n\n  docs['typeof'] = require('./function/utils/typeof');\n  return docs;\n}\n\nexports.name = 'docs';\nexports.path = 'expression';\nexports.factory = factory;"],"sourceRoot":""}