(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{56:function(t,i,e){"use strict";var a=[{AssignmentNode:{},FunctionAssignmentNode:{}},{ConditionalNode:{latexLeftParens:!1,latexRightParens:!1,latexParens:!1}},{"OperatorNode:or":{associativity:"left",associativeWith:[]}},{"OperatorNode:xor":{associativity:"left",associativeWith:[]}},{"OperatorNode:and":{associativity:"left",associativeWith:[]}},{"OperatorNode:bitOr":{associativity:"left",associativeWith:[]}},{"OperatorNode:bitXor":{associativity:"left",associativeWith:[]}},{"OperatorNode:bitAnd":{associativity:"left",associativeWith:[]}},{"OperatorNode:equal":{associativity:"left",associativeWith:[]},"OperatorNode:unequal":{associativity:"left",associativeWith:[]},"OperatorNode:smaller":{associativity:"left",associativeWith:[]},"OperatorNode:larger":{associativity:"left",associativeWith:[]},"OperatorNode:smallerEq":{associativity:"left",associativeWith:[]},"OperatorNode:largerEq":{associativity:"left",associativeWith:[]},RelationalNode:{associativity:"left",associativeWith:[]}},{"OperatorNode:leftShift":{associativity:"left",associativeWith:[]},"OperatorNode:rightArithShift":{associativity:"left",associativeWith:[]},"OperatorNode:rightLogShift":{associativity:"left",associativeWith:[]}},{"OperatorNode:to":{associativity:"left",associativeWith:[]}},{RangeNode:{}},{"OperatorNode:add":{associativity:"left",associativeWith:["OperatorNode:add","OperatorNode:subtract"]},"OperatorNode:subtract":{associativity:"left",associativeWith:[]}},{"OperatorNode:multiply":{associativity:"left",associativeWith:["OperatorNode:multiply","OperatorNode:divide","Operator:dotMultiply","Operator:dotDivide"]},"OperatorNode:divide":{associativity:"left",associativeWith:[],latexLeftParens:!1,latexRightParens:!1,latexParens:!1},"OperatorNode:dotMultiply":{associativity:"left",associativeWith:["OperatorNode:multiply","OperatorNode:divide","OperatorNode:dotMultiply","OperatorNode:doDivide"]},"OperatorNode:dotDivide":{associativity:"left",associativeWith:[]},"OperatorNode:mod":{associativity:"left",associativeWith:[]}},{"OperatorNode:unaryPlus":{associativity:"right"},"OperatorNode:unaryMinus":{associativity:"right"},"OperatorNode:bitNot":{associativity:"right"},"OperatorNode:not":{associativity:"right"}},{"OperatorNode:pow":{associativity:"right",associativeWith:[],latexRightParens:!1},"OperatorNode:dotPow":{associativity:"right",associativeWith:[]}},{"OperatorNode:factorial":{associativity:"left"}},{"OperatorNode:transpose":{associativity:"left"}}];function o(t,i){var e=t;"keep"!==i&&(e=t.getContent());for(var o=e.getIdentifier(),s=0;s<a.length;s++)if(o in a[s])return s;return null}t.exports.properties=a,t.exports.getPrecedence=o,t.exports.getAssociativity=function(t,i){var e=t;"keep"!==i&&(e=t.getContent());var s=e.getIdentifier(),r=o(e,i);if(null===r)return null;var v=a[r][s];if(v.hasOwnProperty("associativity")){if("left"===v.associativity)return"left";if("right"===v.associativity)return"right";throw Error("'"+s+"' has the invalid associativity '"+v.associativity+"'.")}return null},t.exports.isAssociativeWith=function(t,i,e){var s="keep"!==e?t.getContent():t,r="keep"!==e?t.getContent():i,v=s.getIdentifier(),c=r.getIdentifier(),l=o(s,e);if(null===l)return null;var d=a[l][v];if(d.hasOwnProperty("associativeWith")&&d.associativeWith instanceof Array){for(var n=0;n<d.associativeWith.length;n++)if(d.associativeWith[n]===c)return!0;return!1}return null}}}]);