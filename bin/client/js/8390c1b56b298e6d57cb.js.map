{"version":3,"sources":["webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/concat.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/cross.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/ctranspose.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/det.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/diag.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/dot.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/getMatrixDataType.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/identity.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/filter.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/flatten.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/forEach.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/inv.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/kron.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/map.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/ones.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/partitionSelect.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/range.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/resize.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/reshape.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/size.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/sort.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/squeeze.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/subset.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/trace.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/transpose.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/matrix/zeros.js"],"names":["module","exports","name","category","syntax","description","examples","seealso"],"mappings":"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","file":"js/8390c1b56b298e6d57cb.js","sourcesContent":["\"use strict\";\n\nmodule.exports = {\n  'name': 'concat',\n  'category': 'Matrix',\n  'syntax': ['concat(A, B, C, ...)', 'concat(A, B, C, ..., dim)'],\n  'description': 'Concatenate matrices. By default, the matrices are concatenated by the last dimension. The dimension on which to concatenate can be provided as last argument.',\n  'examples': ['A = [1, 2; 5, 6]', 'B = [3, 4; 7, 8]', 'concat(A, B)', 'concat(A, B, 1)', 'concat(A, B, 2)'],\n  'seealso': ['det', 'diag', 'identity', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'cross',\n  'category': 'Matrix',\n  'syntax': ['cross(A, B)'],\n  'description': 'Calculate the cross product for two vectors in three dimensional space.',\n  'examples': ['cross([1, 1, 0],  [0, 1, 1])', 'cross([3, -3, 1], [4, 9, 2])', 'cross([2, 3, 4],  [5, 6, 7])'],\n  'seealso': ['multiply', 'dot']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'transpose',\n  'category': 'Matrix',\n  'syntax': ['x\\'', 'ctranspose(x)'],\n  'description': 'Complex Conjugate and Transpose a matrix',\n  'examples': ['a = [1, 2, 3; 4, 5, 6]', 'a\\'', 'ctranspose(a)'],\n  'seealso': ['concat', 'det', 'diag', 'identity', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'zeros']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'det',\n  'category': 'Matrix',\n  'syntax': ['det(x)'],\n  'description': 'Calculate the determinant of a matrix',\n  'examples': ['det([1, 2; 3, 4])', 'det([-2, 2, 3; -1, 1, 3; 2, 0, -1])'],\n  'seealso': ['concat', 'diag', 'identity', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'diag',\n  'category': 'Matrix',\n  'syntax': ['diag(x)', 'diag(x, k)'],\n  'description': 'Create a diagonal matrix or retrieve the diagonal of a matrix. When x is a vector, a matrix with the vector values on the diagonal will be returned. When x is a matrix, a vector with the diagonal values of the matrix is returned. When k is provided, the k-th diagonal will be filled in or retrieved, if k is positive, the values are placed on the super diagonal. When k is negative, the values are placed on the sub diagonal.',\n  'examples': ['diag(1:3)', 'diag(1:3, 1)', 'a = [1, 2, 3; 4, 5, 6; 7, 8, 9]', 'diag(a)'],\n  'seealso': ['concat', 'det', 'identity', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'dot',\n  'category': 'Matrix',\n  'syntax': ['dot(A, B)', 'A * B'],\n  'description': 'Calculate the dot product of two vectors. ' + 'The dot product of A = [a1, a2, a3, ..., an] and B = [b1, b2, b3, ..., bn] ' + 'is defined as dot(A, B) = a1 * b1 + a2 * b2 + a3 * b3 + ... + an * bn',\n  'examples': ['dot([2, 4, 1], [2, 2, 3])', '[2, 4, 1] * [2, 2, 3]'],\n  'seealso': ['multiply', 'cross']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'getMatrixDataType',\n  'category': 'Matrix',\n  'syntax': ['getMatrixDataType(x)'],\n  'description': 'Find the data type of all elements in a matrix or array, ' + 'for example \"number\" if all items are a number ' + 'and \"Complex\" if all values are complex numbers. ' + 'If a matrix contains more than one data type, it will return \"mixed\".',\n  'examples': ['getMatrixDataType([1, 2, 3])', 'getMatrixDataType([[5 cm], [2 inch]])', 'getMatrixDataType([1, \"text\"])', 'getMatrixDataType([1, bignumber(4)])'],\n  'seealso': ['matrix', 'sparse', 'typeof']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'identity',\n  'category': 'Matrix',\n  'syntax': ['identity(n)', 'identity(m, n)', 'identity([m, n])'],\n  'description': 'Returns the identity matrix with size m-by-n. The matrix has ones on the diagonal and zeros elsewhere.',\n  'examples': ['identity(3)', 'identity(3, 5)', 'a = [1, 2, 3; 4, 5, 6]', 'identity(size(a))'],\n  'seealso': ['concat', 'det', 'diag', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'filter',\n  'category': 'Matrix',\n  'syntax': ['filter(x, test)'],\n  'description': 'Filter items in a matrix.',\n  'examples': ['isPositive(x) = x > 0', 'filter([6, -2, -1, 4, 3], isPositive)', 'filter([6, -2, 0, 1, 0], x != 0)'],\n  'seealso': ['sort', 'map', 'forEach']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'flatten',\n  'category': 'Matrix',\n  'syntax': ['flatten(x)'],\n  'description': 'Flatten a multi dimensional matrix into a single dimensional matrix.',\n  'examples': ['a = [1, 2, 3; 4, 5, 6]', 'size(a)', 'b = flatten(a)', 'size(b)'],\n  'seealso': ['concat', 'resize', 'size', 'squeeze']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'forEach',\n  'category': 'Matrix',\n  'syntax': ['forEach(x, callback)'],\n  'description': 'Iterates over all elements of a matrix/array, and executes the given callback function.',\n  'examples': ['forEach([1, 2, 3], function(val) { console.log(val) })'],\n  'seealso': ['map', 'sort', 'filter']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'inv',\n  'category': 'Matrix',\n  'syntax': ['inv(x)'],\n  'description': 'Calculate the inverse of a matrix',\n  'examples': ['inv([1, 2; 3, 4])', 'inv(4)', '1 / 4'],\n  'seealso': ['concat', 'det', 'diag', 'identity', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'kron',\n  'category': 'Matrix',\n  'syntax': ['kron(x, y)'],\n  'description': 'Calculates the kronecker product of 2 matrices or vectors.',\n  'examples': ['kron([[1, 0], [0, 1]], [[1, 2], [3, 4]])', 'kron([1,1], [2,3,4])'],\n  'seealso': ['multiply', 'dot', 'cross']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'map',\n  'category': 'Matrix',\n  'syntax': ['map(x, callback)'],\n  'description': 'Create a new matrix or array with the results of the callback function executed on each entry of the matrix/array.',\n  'examples': ['map([1, 2, 3], square)'],\n  'seealso': ['filter', 'forEach']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'ones',\n  'category': 'Matrix',\n  'syntax': ['ones(m)', 'ones(m, n)', 'ones(m, n, p, ...)', 'ones([m])', 'ones([m, n])', 'ones([m, n, p, ...])'],\n  'description': 'Create a matrix containing ones.',\n  'examples': ['ones(3)', 'ones(3, 5)', 'ones([2,3]) * 4.5', 'a = [1, 2, 3; 4, 5, 6]', 'ones(size(a))'],\n  'seealso': ['concat', 'det', 'diag', 'identity', 'inv', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'partitionSelect',\n  'category': 'Matrix',\n  'syntax': ['partitionSelect(x, k)', 'partitionSelect(x, k, compare)'],\n  'description': 'Partition-based selection of an array or 1D matrix. Will find the kth smallest value, and mutates the input array. Uses Quickselect.',\n  'examples': ['partitionSelect([5, 10, 1], 2)', 'partitionSelect([\"C\", \"B\", \"A\", \"D\"], 1)'],\n  'seealso': ['sort']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'range',\n  'category': 'Type',\n  'syntax': ['start:end', 'start:step:end', 'range(start, end)', 'range(start, end, step)', 'range(string)'],\n  'description': 'Create a range. Lower bound of the range is included, upper bound is excluded.',\n  'examples': ['1:5', '3:-1:-3', 'range(3, 7)', 'range(0, 12, 2)', 'range(\"4:10\")', 'a = [1, 2, 3, 4; 5, 6, 7, 8]', 'a[1:2, 1:2]'],\n  'seealso': ['concat', 'det', 'diag', 'identity', 'inv', 'ones', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'resize',\n  'category': 'Matrix',\n  'syntax': ['resize(x, size)', 'resize(x, size, defaultValue)'],\n  'description': 'Resize a matrix.',\n  'examples': ['resize([1,2,3,4,5], [3])', 'resize([1,2,3], [5])', 'resize([1,2,3], [5], -1)', 'resize(2, [2, 3])', 'resize(\"hello\", [8], \"!\")'],\n  'seealso': ['size', 'subset', 'squeeze', 'reshape']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'reshape',\n  'category': 'Matrix',\n  'syntax': ['reshape(x, sizes)'],\n  'description': 'Reshape a multi dimensional array to fit the specified dimensions.',\n  'examples': ['reshape([1, 2, 3, 4, 5, 6], [2, 3])', 'reshape([[1, 2], [3, 4]], [1, 4])', 'reshape([[1, 2], [3, 4]], [4])'],\n  'seealso': ['size', 'squeeze', 'resize']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'size',\n  'category': 'Matrix',\n  'syntax': ['size(x)'],\n  'description': 'Calculate the size of a matrix.',\n  'examples': ['size(2.3)', 'size(\"hello world\")', 'a = [1, 2; 3, 4; 5, 6]', 'size(a)', 'size(1:6)'],\n  'seealso': ['concat', 'det', 'diag', 'identity', 'inv', 'ones', 'range', 'squeeze', 'subset', 'trace', 'transpose', 'zeros']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'sort',\n  'category': 'Matrix',\n  'syntax': ['sort(x)', 'sort(x, compare)'],\n  'description': 'Sort the items in a matrix. Compare can be a string \"asc\", \"desc\", \"natural\", or a custom sort function.',\n  'examples': ['sort([5, 10, 1])', 'sort([\"C\", \"B\", \"A\", \"D\"])', 'sortByLength(a, b) = size(a)[1] - size(b)[1]', 'sort([\"Langdon\", \"Tom\", \"Sara\"], sortByLength)', 'sort([\"10\", \"1\", \"2\"], \"natural\")'],\n  'seealso': ['map', 'filter', 'forEach']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'squeeze',\n  'category': 'Matrix',\n  'syntax': ['squeeze(x)'],\n  'description': 'Remove inner and outer singleton dimensions from a matrix.',\n  'examples': ['a = zeros(3,2,1)', 'size(squeeze(a))', 'b = zeros(1,1,3)', 'size(squeeze(b))'],\n  'seealso': ['concat', 'det', 'diag', 'identity', 'inv', 'ones', 'range', 'size', 'subset', 'trace', 'transpose', 'zeros']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'subset',\n  'category': 'Matrix',\n  'syntax': ['value(index)', 'value(index) = replacement', 'subset(value, [index])', 'subset(value, [index], replacement)'],\n  'description': 'Get or set a subset of a matrix or string. ' + 'Indexes are one-based. ' + 'Both the ranges lower-bound and upper-bound are included.',\n  'examples': ['d = [1, 2; 3, 4]', 'e = []', 'e[1, 1:2] = [5, 6]', 'e[2, :] = [7, 8]', 'f = d * e', 'f[2, 1]', 'f[:, 1]'],\n  'seealso': ['concat', 'det', 'diag', 'identity', 'inv', 'ones', 'range', 'size', 'squeeze', 'trace', 'transpose', 'zeros']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'trace',\n  'category': 'Matrix',\n  'syntax': ['trace(A)'],\n  'description': 'Calculate the trace of a matrix: the sum of the elements on the main diagonal of a square matrix.',\n  'examples': ['A = [1, 2, 3; -1, 2, 3; 2, 0, 3]', 'trace(A)'],\n  'seealso': ['concat', 'det', 'diag', 'identity', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'transpose', 'zeros']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'transpose',\n  'category': 'Matrix',\n  'syntax': ['x\\'', 'transpose(x)'],\n  'description': 'Transpose a matrix',\n  'examples': ['a = [1, 2, 3; 4, 5, 6]', 'a\\'', 'transpose(a)'],\n  'seealso': ['concat', 'det', 'diag', 'identity', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'zeros']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'zeros',\n  'category': 'Matrix',\n  'syntax': ['zeros(m)', 'zeros(m, n)', 'zeros(m, n, p, ...)', 'zeros([m])', 'zeros([m, n])', 'zeros([m, n, p, ...])'],\n  'description': 'Create a matrix containing zeros.',\n  'examples': ['zeros(3)', 'zeros(3, 5)', 'a = [1, 2, 3; 4, 5, 6]', 'zeros(size(a))'],\n  'seealso': ['concat', 'det', 'diag', 'identity', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose']\n};"],"sourceRoot":""}