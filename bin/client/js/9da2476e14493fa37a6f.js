(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{123:function(t,e,r){"use strict";var n=r(56);e.name="ConditionalNode",e.path="expression.node",e.factory=function(t,e,o,i){var s=o(r(17)),p=o(r(26));function a(e,r,n){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(!t.isNode(e))throw new TypeError("Parameter condition must be a Node");if(!t.isNode(r))throw new TypeError("Parameter trueExpr must be a Node");if(!t.isNode(n))throw new TypeError("Parameter falseExpr must be a Node");this.condition=e,this.trueExpr=r,this.falseExpr=n}return a.prototype=new s,a.prototype.type="ConditionalNode",a.prototype.isConditionalNode=!0,a.prototype._compile=function(e,r){var n=this.condition._compile(e,r),o=this.trueExpr._compile(e,r),i=this.falseExpr._compile(e,r);return function(e,r,s){return function(e){if("number"==typeof e||"boolean"==typeof e||"string"==typeof e)return!!e;if(e){if(t.isBigNumber(e))return!e.isZero();if(t.isComplex(e))return!(!e.re&&!e.im);if(t.isUnit(e))return!!e.value}if(null==e)return!1;throw new TypeError('Unsupported type of condition "'+p(e)+'"')}(n(e,r,s))?o(e,r,s):i(e,r,s)}},a.prototype.forEach=function(t){t(this.condition,"condition",this),t(this.trueExpr,"trueExpr",this),t(this.falseExpr,"falseExpr",this)},a.prototype.map=function(t){return new a(this._ifNode(t(this.condition,"condition",this)),this._ifNode(t(this.trueExpr,"trueExpr",this)),this._ifNode(t(this.falseExpr,"falseExpr",this)))},a.prototype.clone=function(){return new a(this.condition,this.trueExpr,this.falseExpr)},a.prototype._toString=function(t){var e=t&&t.parenthesis?t.parenthesis:"keep",r=n.getPrecedence(this,e),o=this.condition.toString(t),i=n.getPrecedence(this.condition,e);("all"===e||"OperatorNode"===this.condition.type||null!==i&&i<=r)&&(o="("+o+")");var s=this.trueExpr.toString(t),p=n.getPrecedence(this.trueExpr,e);("all"===e||"OperatorNode"===this.trueExpr.type||null!==p&&p<=r)&&(s="("+s+")");var a=this.falseExpr.toString(t),h=n.getPrecedence(this.falseExpr,e);return("all"===e||"OperatorNode"===this.falseExpr.type||null!==h&&h<=r)&&(a="("+a+")"),o+" ? "+s+" : "+a},a.prototype.toJSON=function(){return{mathjs:"ConditionalNode",condition:this.condition,trueExpr:this.trueExpr,falseExpr:this.falseExpr}},a.fromJSON=function(t){return new a(t.condition,t.trueExpr,t.falseExpr)},a.prototype.toHTML=function(t){var e=t&&t.parenthesis?t.parenthesis:"keep",r=n.getPrecedence(this,e),o=this.condition.toHTML(t),i=n.getPrecedence(this.condition,e);("all"===e||"OperatorNode"===this.condition.type||null!==i&&i<=r)&&(o='<span class="math-parenthesis math-round-parenthesis">(</span>'+o+'<span class="math-parenthesis math-round-parenthesis">)</span>');var s=this.trueExpr.toHTML(t),p=n.getPrecedence(this.trueExpr,e);("all"===e||"OperatorNode"===this.trueExpr.type||null!==p&&p<=r)&&(s='<span class="math-parenthesis math-round-parenthesis">(</span>'+s+'<span class="math-parenthesis math-round-parenthesis">)</span>');var a=this.falseExpr.toHTML(t),h=n.getPrecedence(this.falseExpr,e);return("all"===e||"OperatorNode"===this.falseExpr.type||null!==h&&h<=r)&&(a='<span class="math-parenthesis math-round-parenthesis">(</span>'+a+'<span class="math-parenthesis math-round-parenthesis">)</span>'),o+'<span class="math-operator math-conditional-operator">?</span>'+s+'<span class="math-operator math-conditional-operator">:</span>'+a},a.prototype._toTex=function(t){return"\\begin{cases} {"+this.trueExpr.toTex(t)+"}, &\\quad{\\text{if }\\;"+this.condition.toTex(t)+"}\\\\{"+this.falseExpr.toTex(t)+"}, &\\quad{\\text{otherwise}}\\end{cases}"},a}}}]);