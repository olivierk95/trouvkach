{"version":3,"sources":["webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/probability/combinations.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/probability/factorial.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/probability/gamma.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/probability/kldivergence.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/probability/multinomial.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/probability/permutations.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/probability/pickRandom.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/probability/random.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/probability/randomInt.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/relational/compare.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/relational/compareNatural.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/relational/compareText.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/relational/deepEqual.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/relational/equal.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/relational/equalText.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/relational/larger.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/relational/largerEq.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/relational/smaller.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/relational/smallerEq.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/relational/unequal.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/set/setCartesian.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/set/setDifference.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/set/setDistinct.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/set/setIntersect.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/set/setIsSubset.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/set/setMultiplicity.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/set/setPowerset.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/set/setSize.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/set/setSymDifference.js","webpack:////home/raph/home/raph/becode/trouvkach/node_modules/mathjs/lib/expression/embeddedDocs/function/set/setUnion.js"],"names":["module","exports","name","category","syntax","description","examples","seealso"],"mappings":"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","file":"js/809e09728b7c2c80b528.js","sourcesContent":["\"use strict\";\n\nmodule.exports = {\n  'name': 'combinations',\n  'category': 'Probability',\n  'syntax': ['combinations(n, k)'],\n  'description': 'Compute the number of combinations of n items taken k at a time',\n  'examples': ['combinations(7, 5)'],\n  'seealso': ['permutations', 'factorial']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'factorial',\n  'category': 'Probability',\n  'syntax': ['n!', 'factorial(n)'],\n  'description': 'Compute the factorial of a value',\n  'examples': ['5!', '5 * 4 * 3 * 2 * 1', '3!'],\n  'seealso': ['combinations', 'permutations', 'gamma']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'gamma',\n  'category': 'Probability',\n  'syntax': ['gamma(n)'],\n  'description': 'Compute the gamma function. For small values, the Lanczos approximation is used, and for large values the extended Stirling approximation.',\n  'examples': ['gamma(4)', '3!', 'gamma(1/2)', 'sqrt(pi)'],\n  'seealso': ['factorial']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'kldivergence',\n  'category': 'Probability',\n  'syntax': ['kldivergence(x, y)'],\n  'description': 'Calculate the Kullback-Leibler (KL) divergence  between two distributions.',\n  'examples': ['kldivergence([0.7,0.5,0.4], [0.2,0.9,0.5])'],\n  'seealso': []\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'multinomial',\n  'category': 'Probability',\n  'syntax': ['multinomial(A)'],\n  'description': 'Multinomial Coefficients compute the number of ways of picking a1, a2, ..., ai unordered outcomes from `n` possibilities. multinomial takes one array of integers as an argument. The following condition must be enforced: every ai > 0.',\n  'examples': ['multinomial([1, 2, 1])'],\n  'seealso': ['combinations', 'factorial']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'permutations',\n  'category': 'Probability',\n  'syntax': ['permutations(n)', 'permutations(n, k)'],\n  'description': 'Compute the number of permutations of n items taken k at a time',\n  'examples': ['permutations(5)', 'permutations(5, 3)'],\n  'seealso': ['combinations', 'factorial']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'pickRandom',\n  'category': 'Probability',\n  'syntax': ['pickRandom(array)', 'pickRandom(array, number)', 'pickRandom(array, weights)', 'pickRandom(array, number, weights)', 'pickRandom(array, weights, number)'],\n  'description': 'Pick a random entry from a given array.',\n  'examples': ['pickRandom(0:10)', 'pickRandom([1, 3, 1, 6])', 'pickRandom([1, 3, 1, 6], 2)', 'pickRandom([1, 3, 1, 6], [2, 3, 2, 1])', 'pickRandom([1, 3, 1, 6], 2, [2, 3, 2, 1])', 'pickRandom([1, 3, 1, 6], [2, 3, 2, 1], 2)'],\n  'seealso': ['random', 'randomInt']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'random',\n  'category': 'Probability',\n  'syntax': ['random()', 'random(max)', 'random(min, max)', 'random(size)', 'random(size, max)', 'random(size, min, max)'],\n  'description': 'Return a random number.',\n  'examples': ['random()', 'random(10, 20)', 'random([2, 3])'],\n  'seealso': ['pickRandom', 'randomInt']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'randomInt',\n  'category': 'Probability',\n  'syntax': ['randomInt(max)', 'randomInt(min, max)', 'randomInt(size)', 'randomInt(size, max)', 'randomInt(size, min, max)'],\n  'description': 'Return a random integer number',\n  'examples': ['randomInt(10, 20)', 'randomInt([2, 3], 10)'],\n  'seealso': ['pickRandom', 'random']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'compare',\n  'category': 'Relational',\n  'syntax': ['compare(x, y)'],\n  'description': 'Compare two values. ' + 'Returns 1 when x > y, -1 when x < y, and 0 when x == y.',\n  'examples': ['compare(2, 3)', 'compare(3, 2)', 'compare(2, 2)', 'compare(5cm, 40mm)', 'compare(2, [1, 2, 3])'],\n  'seealso': ['equal', 'unequal', 'smaller', 'smallerEq', 'largerEq', 'compareNatural', 'compareText']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'compareNatural',\n  'category': 'Relational',\n  'syntax': ['compareNatural(x, y)'],\n  'description': 'Compare two values of any type in a deterministic, natural way. ' + 'Returns 1 when x > y, -1 when x < y, and 0 when x == y.',\n  'examples': ['compareNatural(2, 3)', 'compareNatural(3, 2)', 'compareNatural(2, 2)', 'compareNatural(5cm, 40mm)', 'compareNatural(\"2\", \"10\")', 'compareNatural(2 + 3i, 2 + 4i)', 'compareNatural([1, 2, 4], [1, 2, 3])', 'compareNatural([1, 5], [1, 2, 3])', 'compareNatural([1, 2], [1, 2])', 'compareNatural({a: 2}, {a: 4})'],\n  'seealso': ['equal', 'unequal', 'smaller', 'smallerEq', 'largerEq', 'compare', 'compareText']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'compareText',\n  'category': 'Relational',\n  'syntax': ['compareText(x, y)'],\n  'description': 'Compare two strings lexically. Comparison is case sensitive. ' + 'Returns 1 when x > y, -1 when x < y, and 0 when x == y.',\n  'examples': ['compareText(\"B\", \"A\")', 'compareText(\"A\", \"B\")', 'compareText(\"A\", \"A\")', 'compareText(\"2\", \"10\")', 'compare(\"2\", \"10\")', 'compare(2, 10)', 'compareNatural(\"2\", \"10\")', 'compareText(\"B\", [\"A\", \"B\", \"C\"])'],\n  'seealso': ['compare', 'compareNatural']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'deepEqual',\n  'category': 'Relational',\n  'syntax': ['deepEqual(x, y)'],\n  'description': 'Check equality of two matrices element wise. Returns true if the size of both matrices is equal and when and each of the elements are equal.',\n  'examples': ['deepEqual([1,3,4], [1,3,4])', 'deepEqual([1,3,4], [1,3])'],\n  'seealso': ['equal', 'unequal', 'smaller', 'larger', 'smallerEq', 'largerEq', 'compare']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'equal',\n  'category': 'Relational',\n  'syntax': ['x == y', 'equal(x, y)'],\n  'description': 'Check equality of two values. Returns true if the values are equal, and false if not.',\n  'examples': ['2+2 == 3', '2+2 == 4', 'a = 3.2', 'b = 6-2.8', 'a == b', '50cm == 0.5m'],\n  'seealso': ['unequal', 'smaller', 'larger', 'smallerEq', 'largerEq', 'compare', 'deepEqual', 'equalText']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'equalText',\n  'category': 'Relational',\n  'syntax': ['equalText(x, y)'],\n  'description': 'Check equality of two strings. Comparison is case sensitive. Returns true if the values are equal, and false if not.',\n  'examples': ['equalText(\"Hello\", \"Hello\")', 'equalText(\"a\", \"A\")', 'equal(\"2e3\", \"2000\")', 'equalText(\"2e3\", \"2000\")', 'equalText(\"B\", [\"A\", \"B\", \"C\"])'],\n  'seealso': ['compare', 'compareNatural', 'compareText', 'equal']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'larger',\n  'category': 'Relational',\n  'syntax': ['x > y', 'larger(x, y)'],\n  'description': 'Check if value x is larger than y. Returns true if x is larger than y, and false if not.',\n  'examples': ['2 > 3', '5 > 2*2', 'a = 3.3', 'b = 6-2.8', '(a > b)', '(b < a)', '5 cm > 2 inch'],\n  'seealso': ['equal', 'unequal', 'smaller', 'smallerEq', 'largerEq', 'compare']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'largerEq',\n  'category': 'Relational',\n  'syntax': ['x >= y', 'largerEq(x, y)'],\n  'description': 'Check if value x is larger or equal to y. Returns true if x is larger or equal to y, and false if not.',\n  'examples': ['2 >= 1+1', '2 > 1+1', 'a = 3.2', 'b = 6-2.8', '(a >= b)'],\n  'seealso': ['equal', 'unequal', 'smallerEq', 'smaller', 'compare']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'smaller',\n  'category': 'Relational',\n  'syntax': ['x < y', 'smaller(x, y)'],\n  'description': 'Check if value x is smaller than value y. Returns true if x is smaller than y, and false if not.',\n  'examples': ['2 < 3', '5 < 2*2', 'a = 3.3', 'b = 6-2.8', '(a < b)', '5 cm < 2 inch'],\n  'seealso': ['equal', 'unequal', 'larger', 'smallerEq', 'largerEq', 'compare']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'smallerEq',\n  'category': 'Relational',\n  'syntax': ['x <= y', 'smallerEq(x, y)'],\n  'description': 'Check if value x is smaller or equal to value y. Returns true if x is smaller than y, and false if not.',\n  'examples': ['2 <= 1+1', '2 < 1+1', 'a = 3.2', 'b = 6-2.8', '(a <= b)'],\n  'seealso': ['equal', 'unequal', 'larger', 'smaller', 'largerEq', 'compare']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'unequal',\n  'category': 'Relational',\n  'syntax': ['x != y', 'unequal(x, y)'],\n  'description': 'Check unequality of two values. Returns true if the values are unequal, and false if they are equal.',\n  'examples': ['2+2 != 3', '2+2 != 4', 'a = 3.2', 'b = 6-2.8', 'a != b', '50cm != 0.5m', '5 cm != 2 inch'],\n  'seealso': ['equal', 'smaller', 'larger', 'smallerEq', 'largerEq', 'compare', 'deepEqual']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'setCartesian',\n  'category': 'Set',\n  'syntax': ['setCartesian(set1, set2)'],\n  'description': 'Create the cartesian product of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.',\n  'examples': ['setCartesian([1, 2], [3, 4])'],\n  'seealso': ['setUnion', 'setIntersect', 'setDifference', 'setPowerset']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'setDifference',\n  'category': 'Set',\n  'syntax': ['setDifference(set1, set2)'],\n  'description': 'Create the difference of two (multi)sets: every element of set1, that is not the element of set2. Multi-dimension arrays will be converted to single-dimension arrays before the operation.',\n  'examples': ['setDifference([1, 2, 3, 4], [3, 4, 5, 6])', 'setDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])'],\n  'seealso': ['setUnion', 'setIntersect', 'setSymDifference']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'setDistinct',\n  'category': 'Set',\n  'syntax': ['setDistinct(set)'],\n  'description': 'Collect the distinct elements of a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.',\n  'examples': ['setDistinct([1, 1, 1, 2, 2, 3])'],\n  'seealso': ['setMultiplicity']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'setIntersect',\n  'category': 'Set',\n  'syntax': ['setIntersect(set1, set2)'],\n  'description': 'Create the intersection of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.',\n  'examples': ['setIntersect([1, 2, 3, 4], [3, 4, 5, 6])', 'setIntersect([[1, 2], [3, 4]], [[3, 4], [5, 6]])'],\n  'seealso': ['setUnion', 'setDifference']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'setIsSubset',\n  'category': 'Set',\n  'syntax': ['setIsSubset(set1, set2)'],\n  'description': 'Check whether a (multi)set is a subset of another (multi)set: every element of set1 is the element of set2. Multi-dimension arrays will be converted to single-dimension arrays before the operation.',\n  'examples': ['setIsSubset([1, 2], [3, 4, 5, 6])', 'setIsSubset([3, 4], [3, 4, 5, 6])'],\n  'seealso': ['setUnion', 'setIntersect', 'setDifference']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'setMultiplicity',\n  'category': 'Set',\n  'syntax': ['setMultiplicity(element, set)'],\n  'description': 'Count the multiplicity of an element in a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.',\n  'examples': ['setMultiplicity(1, [1, 2, 2, 4])', 'setMultiplicity(2, [1, 2, 2, 4])'],\n  'seealso': ['setDistinct', 'setSize']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'setPowerset',\n  'category': 'Set',\n  'syntax': ['setPowerset(set)'],\n  'description': 'Create the powerset of a (multi)set: the powerset contains very possible subsets of a (multi)set. A multi-dimension array will be converted to a single-dimension array before the operation.',\n  'examples': ['setPowerset([1, 2, 3])'],\n  'seealso': ['setCartesian']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'setSize',\n  'category': 'Set',\n  'syntax': ['setSize(set)', 'setSize(set, unique)'],\n  'description': 'Count the number of elements of a (multi)set. When the second parameter \"unique\" is true, count only the unique values. A multi-dimension array will be converted to a single-dimension array before the operation.',\n  'examples': ['setSize([1, 2, 2, 4])', 'setSize([1, 2, 2, 4], true)'],\n  'seealso': ['setUnion', 'setIntersect', 'setDifference']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'setSymDifference',\n  'category': 'Set',\n  'syntax': ['setSymDifference(set1, set2)'],\n  'description': 'Create the symmetric difference of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.',\n  'examples': ['setSymDifference([1, 2, 3, 4], [3, 4, 5, 6])', 'setSymDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])'],\n  'seealso': ['setUnion', 'setIntersect', 'setDifference']\n};","\"use strict\";\n\nmodule.exports = {\n  'name': 'setUnion',\n  'category': 'Set',\n  'syntax': ['setUnion(set1, set2)'],\n  'description': 'Create the union of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.',\n  'examples': ['setUnion([1, 2, 3, 4], [3, 4, 5, 6])', 'setUnion([[1, 2], [3, 4]], [[3, 4], [5, 6]])'],\n  'seealso': ['setIntersect', 'setDifference']\n};"],"sourceRoot":""}